name: Deploy DockerHub Images to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make client envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_VITE_CLIENT_URL: ${{ secrets.VITE_CLIENT_URL }}
          envkey_VITE_SERVER_URL: ${{ secrets.VITE_SERVER_URL }}
          file_name: .env.production
          directory: ./src/client/config

      - name: Make server envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_VITE_CLIENT_URL: ${{ secrets.VITE_CLIENT_URL }}
          envkey_VITE_SERVER_URL: ${{ secrets.VITE_SERVER_URL }}
          envkey_MONGO_URI: ${{ secrets.MONGO_URI }}
          envkey_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          envkey_GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          envkey_FACEBOOK_CLIENT_ID: ${{ secrets.FACEBOOK_CLIENT_ID }}
          envkey_FACEBOOK_CLIENT_SECRET: ${{ secrets.FACEBOOK_CLIENT_SECRET }}
          envkey_STEAM_API_KEY: ${{ secrets.STEAM_API_KEY }}
          envkey_JWT_SECRET: ${{ secrets.JWT_SECRET }}
          file_name: .env.production
          directory: ./src/server/config

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build nginx Image
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/cm-nginx:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build client Image
        uses: docker/build-push-action@v5
        with:
          context: ./src/client
          file: ./src/client/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/cm-client:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Build server Image
        uses: docker/build-push-action@v5
        with:
          context: ./src/server
          file: ./src/server/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/cm-server:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move Cache Layers
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy-to-beanstalk:
    name: Deploy to AWS Beanstalk
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Docker Compose File for AWS
        shell: bash
        run: |
          bash ./scripts/create-docker-compose-aws.sh ${{ secrets.DOCKER_USERNAME }} ${{ github.sha }}

      - name: Deploy Images to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: content-manager
          environment_name: cm-env
          version_label: ${{ github.sha }} ${{ github.run_id }}-${{ github.run_attempt }}
          region: us-east-1
          deployment_package: docker-compose-aws.yml
